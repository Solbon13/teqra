{"version":3,"sources":["components/MyHeader/MyHeader.js","page/Main.js","utils/const.js","redux/mainReducer.js","components/PaymentForm/PaymentForm.js","components/PaymentTable/PaymentTable.jsx","page/Payment.js","components/ProgrammCard/ProgrammCard.jsx","page/Programm.js","redux/reduxStore.js","App.js","index.js"],"names":["MyHeader","className","justify","span","theme","mode","Item","to","Main","SET_COIN","SET_CONSUMPTION","SET_PLAN","initialState","coin","сonsumption","plan","term","minInvestments","maxInvestments","minAccruals","maxAccruals","output","dailyWithdrawal","mainReducer","state","action","type","payload","connect","main","props","dispatch","useDispatch","console","log","name","initialValues","onFinish","values","onFinishFailed","errorInfo","label","rules","required","message","htmlType","Column","Table","data","map","item","key","minPlanAccruals","maxPlanAccruals","termPlan","min","max","minDailyProfit","maxDailyProfit","minСonsumption","maxСonsumption","scroll","x","dataSource","title","dataIndex","render","tag","color","Payment","Card","Meta","Programm","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","Content","Layout","App","style","padding","Suspense","fallback","active","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.685fc8b9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Col, Menu, Row } from 'antd'\r\nimport { Header } from 'antd/lib/layout/layout'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst MyHeader = () => {\r\n    return (\r\n        <Header className=\"header\">\r\n            <div className=\"logo\" />\r\n            <Row justify=\"space-between\">\r\n                <Col span={1}>\r\n                    {/* <img height={50} src={logo} alt='LOGO' /> */}\r\n                </Col>\r\n                <Col span={17}>\r\n                    <Menu theme=\"dark\" mode=\"horizontal\" >\r\n                        <Menu.Item key=\"1\" ><NavLink to='/'>Главная</NavLink></Menu.Item>\r\n                        <Menu.Item key=\"2\"><NavLink to='/payment'>Расчет</NavLink></Menu.Item>\r\n                        <Menu.Item key=\"3\"><NavLink to='/programm'>Планы</NavLink></Menu.Item>\r\n                    </Menu>\r\n                </Col>\r\n                <Col span={4}>\r\n                    {/*одну кнопку сделать*/}\r\n                    {/* <Menu theme=\"dark\" mode=\"horizontal\">\r\n                        <SubMenu key=\"SubMenu\" title=\"Администрирование\">\r\n                                <Menu.Item key=\"8\"><NavLink to={ADMIN_ROUTE}>Справочники</NavLink></Menu.Item>\r\n                                <Menu.Item key=\"9\"><NavLink to={SIGNUP_ROUTE} onClick={props.logout} >Выход</NavLink></Menu.Item>\r\n                            </SubMenu>\r\n                            \r\n                    </Menu> */}\r\n                </Col>\r\n            </Row>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default MyHeader\r\n","import React from 'react'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div>\r\n            <p>Расчет в Расчетах</p>\r\n            <p>Условия в Планы</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","export const SET_COIN = 'SET_COIN'\r\nexport const SET_CONSUMPTION = 'SET_CONSUMPTION'\r\nexport const SET_PLAN = 'SET_PLAN'","import { SET_COIN, SET_CONSUMPTION, SET_PLAN } from \"../utils/const\"\r\n\r\n\r\nlet initialState = {\r\n    coin: 100,\r\n    сonsumption: 48,\r\n    plan: [\r\n        {\r\n            plan: 'План 1',\r\n            term: 10,\r\n            minInvestments: '50',\r\n            maxInvestments: '499',\r\n            minAccruals: '1.10',\r\n            maxAccruals: '1.50',\r\n            output: 'Да',\r\n            dailyWithdrawal: 'Да'\r\n        },\r\n        {\r\n            plan: 'План 2',\r\n            term: 25,\r\n            minInvestments: '500',\r\n            maxInvestments: '4999',\r\n            minAccruals: '1.50',\r\n            maxAccruals: '1.90',\r\n            output: 'Да',\r\n            dailyWithdrawal: 'Да'\r\n        },\r\n        {\r\n            plan: 'План 3',\r\n            term: 40,\r\n            minInvestments: '5000',\r\n            maxInvestments: '49999',\r\n            minAccruals: '1.90',\r\n            maxAccruals: '2.30',\r\n            output: 'Да',\r\n            dailyWithdrawal: 'Да'\r\n        },\r\n        {\r\n            plan: 'План 4',\r\n            term: 50,\r\n            minInvestments: '50000',\r\n            maxInvestments: '1000000',\r\n            minAccruals: '2.30',\r\n            maxAccruals: '3.00',\r\n            output: 'Да',\r\n            dailyWithdrawal: 'Да'\r\n        },\r\n        {\r\n            plan: 'VIP',\r\n            term: 60,\r\n            minInvestments: '500',\r\n            maxInvestments: '1000000',\r\n            minAccruals: '2.70',\r\n            maxAccruals: '4.50',\r\n            output: 'Нет',\r\n            dailyWithdrawal: 'Да'\r\n        },\r\n        {\r\n            plan: 'VIP Plus',\r\n            term: 180,\r\n            minInvestments: '50',\r\n            maxInvestments: '1000000',\r\n            minAccruals: '5.00',\r\n            maxAccruals: '5.00',\r\n            output: 'Да',\r\n            dailyWithdrawal: 'Нет'\r\n        }\r\n    ]\r\n}\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_COIN:\r\n            return {\r\n                ...state,\r\n                coin: +action.payload\r\n            }\r\n        case SET_CONSUMPTION:\r\n            return {\r\n                ...state,\r\n                сonsumption: +action.payload\r\n            }\r\n        case SET_PLAN:\r\n            return {\r\n                ...state,\r\n                plan: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const coinStore = (coin) => {\r\n    return { type: SET_COIN, payload: coin }\r\n}\r\nexport const сonsumptionStore = (сonsumption) => {\r\n    return { type: SET_CONSUMPTION, payload: сonsumption }\r\n}\r\nexport const planStore = (plan) => {\r\n    return { type: SET_PLAN, payload: plan }\r\n}\r\n\r\nexport default mainReducer","import React from 'react'\r\nimport { Button, Checkbox, Form, Input } from 'antd';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { coinStore, сonsumptionStore } from '../../redux/mainReducer';\r\nimport { SET_COIN, SET_CONSUMPTION } from '../../utils/const';\r\n\r\nconst PaymentForm = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onFinish = (values) => {\r\n        dispatch(coinStore(values.coin))\r\n        dispatch(сonsumptionStore(values.сonsumption))\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    console.log(props)\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n                сonsumption: props.сonsumption,\r\n                coin: props.coin,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                label=\"Сумма\"\r\n                name=\"coin\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Не введена сумма!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input type = 'number'/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Расход\"\r\n                name=\"сonsumption\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Не введена сумма!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input type = 'number'/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                    </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        coin: state.main.coin,\r\n        сonsumption: state.main.сonsumption,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n})(PaymentForm)\r\n","import React from 'react'\r\n\r\nimport { Table, Tag, Space } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column } = Table;\r\n\r\n\r\nconst PaymentTable = (props) => {\r\n\r\n    // const data = [\r\n    //     {\r\n    //         key: '1',\r\n    //         plan: 'План',\r\n    //         minPlanAccruals: 'Мин начисление',\r\n    //         maxPlanAccruals: 'Макс начисление',\r\n    //         termPlan: 'Срок',\r\n    //         minPayback: 'Окупаемость минимум',\r\n    //         maxPayback: 'Окупаемость максимум',\r\n    //         minPaybackWithdrawal: 'Окупаемость минимум со снятием',\r\n    //         maxPaybackWithdrawal: 'Окупаемость максимум со снятием',\r\n    //         minPaybackTerm: 'Окупаемость минимум по исетечении срока',\r\n    //         maxPaybackTerm: 'Окупаемость максимум по исетечении срока',\r\n    //     },\r\n    // ];\r\n\r\n    const data = props.plan.map(item => {\r\n        return {\r\n            key: item.plan,\r\n            plan: item.plan,\r\n            minPlanAccruals:\r\n                props.coin > item.minInvestments && props.coin * item.minAccruals / 100,\r\n            maxPlanAccruals:\r\n                props.coin > item.minInvestments && props.coin * item.maxAccruals / 100,\r\n            termPlan: item.term,\r\n            min:\r\n                props.coin > item.minInvestments\r\n                && (item.term * (props.coin * item.minAccruals / 100)\r\n                    + (item.output === 'Да' && props.coin)),\r\n            max:\r\n                props.coin > item.minInvestments\r\n                && (item.term * (props.coin * item.maxAccruals / 100)\r\n                    + (item.output === 'Да' && props.coin)),\r\n            minDailyProfit:\r\n                props.coin > item.minInvestments\r\n                && (item.dailyWithdrawal === 'Да'\r\n                    ? item.minInvestments && props.coin * item.minAccruals / 100\r\n                    : 0),\r\n            maxDailyProfit:\r\n                props.coin > item.minInvestments\r\n                && (item.dailyWithdrawal === 'Да'\r\n                    ? item.minInvestments && props.coin * item.maxAccruals / 100\r\n                    : 0),\r\n            minСonsumption:\r\n                props.coin > item.minInvestments\r\n                && (item.term * (props.coin * item.minAccruals / 100)\r\n                    + (item.output === 'Да' && props.coin) - props.сonsumption) - props.coin,\r\n            maxСonsumption:\r\n                props.coin > item.minInvestments\r\n                && (item.term * (props.coin * item.maxAccruals / 100)\r\n                    + (item.output === 'Да' && props.coin) - props.сonsumption) - props.coin,\r\n        }\r\n    }\r\n    )\r\n\r\n    //             <Column title=\"Срок\" dataIndex=\"term\" key=\"term\" />\r\n    //             <Column title=\"Макс. инвестиции\" dataIndex=\"maxInvestments\" key=\"maxInvestments\" />\r\n    //             <Column title=\"Мин. ежедневные начисления\" dataIndex=\"minAccruals\" key=\"minAccruals\" />\r\n    //             <Column title=\"Макс. ежедневные начисления\" dataIndex=\"maxAccruals\" key=\"maxAccruals\" />\r\n    //             <Column title=\"Вывод тела\" dataIndex=\"output\" key=\"output\" />\r\n    //             <Column title=\"Ежедневный вывод\"\r\n\r\n    const fixedColumns = [\r\n        {\r\n            title: 'plan',\r\n            dataIndex: 'plan',\r\n            fixed: true,\r\n            width: 100,\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Table\r\n            scroll={{ x: 2000 }}\r\n            dataSource={data}>\r\n            <Column title=\"План\" dataIndex=\"plan\" key=\"plan\" />\r\n            <Column title=\"Мин начисление в день\" dataIndex=\"minPlanAccruals\" key=\"minPlanAccruals\" />\r\n            <Column title=\"Макс начисление в день\" dataIndex=\"maxPlanAccruals\" key=\"maxPlanAccruals\" />\r\n            <Column title=\"Срок\" dataIndex=\"termPlan\" key=\"termPlan\" />\r\n            <Column title=\"Минимум\" dataIndex=\"min\" key=\"min\" />\r\n            <Column title=\"Максимум\" dataIndex=\"max\" key=\"max\" />\r\n            <Column title=\"Мин ежедневная прибыль\" dataIndex=\"minDailyProfit\" key=\"minDailyProfit\" />\r\n            <Column title=\"Макс ежедневная прибыль\" dataIndex=\"maxDailyProfit\" key=\"maxDailyProfit\" />\r\n            <Column\r\n                title=\"Минимум прибыли с учетом раходов\"\r\n                dataIndex=\"minСonsumption\"\r\n                key=\"minСonsumption\"\r\n                render={tag => {\r\n                    let color = tag > 0 ? 'green' : 'red';\r\n                    return (\r\n                      <Tag color={color} key={tag}>\r\n                        {tag}\r\n                      </Tag>\r\n                    );\r\n                }}\r\n                />\r\n            <Column\r\n                title=\"Максимум прибыли с учетом раходов\"\r\n                dataIndex=\"maxСonsumption\"\r\n                key=\"maxСonsumption\"\r\n                render={tag => {\r\n                    let color = tag > 0 ? 'green' : 'red';\r\n                    return (\r\n                      <Tag color={color} key={tag}>\r\n                        {tag}\r\n                      </Tag>\r\n                    );\r\n                }}\r\n            />\r\n        </Table>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        coin: state.main.coin,\r\n        сonsumption: state.main.сonsumption,\r\n        plan: state.main.plan,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n})(PaymentTable)\r\n","import React from 'react'\r\nimport PaymentForm from '../components/PaymentForm/PaymentForm'\r\nimport PaymentTable from '../components/PaymentTable/PaymentTable'\r\n\r\nconst Payment = () => {\r\n    return (\r\n        <div>\r\n            Цена на Teqra фиксирована + для того чтоб положить на кошелек цена доллара выше примерно на 5 рублей\r\n            <PaymentForm/>\r\n            <PaymentTable/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","import React from 'react'\r\nimport { Card, Avatar, Table } from 'antd';\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Meta } = Card;\r\nconst { Column } = Table;\r\n\r\n\r\nconst ProgrammCard = (props) => {\r\n\r\n    const data = props.plan.map( item => {\r\n        return {\r\n            key: item.plan,\r\n            plan: item.plan,\r\n            term: item.term,\r\n            minInvestments: item.minInvestments,\r\n            maxInvestments: item.maxInvestments,\r\n            minAccruals: item.minAccruals,\r\n            maxAccruals: item.maxAccruals,\r\n            output: item.output,\r\n            dailyWithdrawal: item.dailyWithdrawal\r\n        }}\r\n    )\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Table dataSource={data}>\r\n                <Column title=\"План\" dataIndex=\"plan\" key=\"plan\" />\r\n                <Column title=\"Срок\" dataIndex=\"term\" key=\"term\" />\r\n                <Column title=\"Мин. инвестиции\" dataIndex=\"minInvestments\" key=\"minInvestments\" />\r\n                <Column title=\"Макс. инвестиции\" dataIndex=\"maxInvestments\" key=\"maxInvestments\" />\r\n                <Column title=\"Мин. ежедневные начисления\" dataIndex=\"minAccruals\" key=\"minAccruals\" />\r\n                <Column title=\"Макс. ежедневные начисления\" dataIndex=\"maxAccruals\" key=\"maxAccruals\" />\r\n                <Column title=\"Вывод тела\" dataIndex=\"output\" key=\"output\" />\r\n                <Column title=\"Ежедневный вывод\" dataIndex=\"dailyWithdrawal\" key=\"dailyWithdrawal\" />\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        plan: state.main.plan,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n})(ProgrammCard)\r\n","import React from 'react'\r\nimport ProgrammCard from '../components/ProgrammCard/ProgrammCard'\r\n\r\nconst Programm = () => {\r\n    return (\r\n        <div>\r\n            <ProgrammCard/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Programm\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport mainReducer from \"./mainReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    main: mainReducer\r\n})\r\n\r\nlet store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store","import { Layout, Skeleton } from 'antd';\nimport React from 'react';\nimport { Provider } from 'react-redux';\n// import { Route } from 'react-router';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\nimport './App.css';\nimport MyHeader from './components/MyHeader/MyHeader';\nimport Main from './page/Main';\nimport Payment from './page/Payment';\nimport Programm from './page/Programm';\nimport store from './redux/reduxStore';\n\nconst { Content } = Layout; \n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <Layout>\n          <MyHeader />\n          <Content style={{ padding: '0 50px' }}>\n            <React.Suspense fallback={<Skeleton active />}>\n              {/* <Route path='/' component={<Main/>} exact /> */}\n              <Route path='/' render={() => <Main />} exact /> \n              <Route path='/payment' render={() => <Payment />} /> \n              <Route path='/programm' render={() => <Programm />} /> \n            </React.Suspense>\n          </Content>\n        </Layout>\n      </Provider>\n    </BrowserRouter> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}